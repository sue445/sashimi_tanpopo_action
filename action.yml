name: "sashimi_tanpopo_action"
description: "Action for running sashimi_tanpopo with GitHub Actions"

branding:
  icon: edit
  color: green

inputs:
  ruby-version:
    description: |
      Runtime ruby version.
      This passed to ruby-version of ruby/setup-ruby.
      c.f. https://github.com/ruby/setup-ruby
      Default: ruby (latest stable version)
    required: true
    default: ruby

  sashimi-tanpopo-version:
    description: |
      sashimi_tanpopo version. (e.g. 0.1.0, 0.1.1)
      c.f. https://github.com/sue445/sashimi_tanpopo/releases
      Default: latest version
    required: false
    default: ""

  command:
    description: |
      sashimi_tanpopo command. (e.g. local, github, gitlab)
      c.f. https://github.com/sue445/sashimi_tanpopo#usage
    required: true
    default: github

  recipe-files:
    description: |
      recipe files.
      e.g. "recipe1.rb recipe2.rb"
    required: false
    default: ""

  target-dir:
    description: |
      Target directory.
      Default: $GITHUB_WORKSPACE
    required: false
    default: ""

  params:
    description: |
      Params passed to recipe file.
      e.g. "key1:value1 key2:value2"
    required: false
    default: ""

  dry-run:
    description: |
      Whether to run dry run.
      Either true or false.
    required: false
    default: "false"

  color:
    description: |
      Whether to colorize output.
      Either true or false.
    required: false
    default: "true"

  git-user-name:
    description: |
      user name for git commit.
      Default: username of user authenticated with token.
      When using App Token, you must set this.
    required: false
    default: ""

  git-email:
    description: |
      email for git commit.
      Default: <git_user_name>@users.noreply.<github_host>
    required: false
    default: ""

  message:
    description: |
      commit message
    required: false
    default: ""

  github-repository:
    description: |
      GitHub repository for Pull Request.
      e.g. user/repo
      Default: $GITHUB_REPOSITORY
    required: false
    default: ""

  github-api-url:
    description: |
      GitHub API endpoint.
      Default: $GITHUB_API_URL
    required: false
    default: ""

  pr-title:
    description: |
      Pull Request title
    required: false
    default: ""

  pr-body:
    description: |
      Pull Request body
    required: false
    default: ""

  pr-source-branch:
    description: |
      Pull Request source branch (a.k.a. head branch)
    required: false
    default: ""

  pr-target-branch:
    description: |
      Pull Request target branch (a.k.a. base branch)
      Default: default branch of github-repository
    required: false
    default: ""

  pr-assignees:
    description: |
      Pull Request assignees.
      e.g. "one two three"
    required: false
    default: ""

  pr-reviewers:
    description: |
      Pull Request reviewers.
      e.g. "one two three"
    required: false
    default: ""

  pr-labels:
    description: |
      Pull Request labels.
      e.g. "one two three"
    required: false
    default: ""

  pr-draft:
    description: |
      Whether to create draft Pull Request.
      Either true or false.
    required: false
    default: "false"

  arguments:
    description: |
      sashimi_tanpopo arguments.
      If you want to pass an argument you created yourself, use this.
      c.f. https://github.com/sue445/sashimi_tanpopo#usage
    required: false
    default: ""

runs:
  using: composite

  steps:
    - name: Setup ruby
      uses: ruby/setup-ruby@ab177d40ee5483edb974554986f56b33477e21d0 # v1.265.0
      with:
        ruby-version: ${{ inputs.ruby-version }}

    - name: Install sashimi_tanpopo
      run: |
        if [ ${SASHIMI_TANPOPO_VERSION} != "" ]; then
          args="--version ${SASHIMI_TANPOPO_VERSION}"
        fi
        gem install --no-doc sashimi_tanpopo ${args}
      shell: bash
      env:
        SASHIMI_TANPOPO_VERSION: ${{ inputs.sashimi-tanpopo-version }}

    - name: Run sashimi_tanpopo
      run: |
        args=()

        if [ "${_COMMAND}" == "local" ] || [ "${_COMMAND}" == "github" ]; then
          if [ "${_RECIPE_FILES}" != "" ]; then
            args+=(${_RECIPE_FILES})
          fi
  
          if [ "${_TARGET_DIR}" != "" ]; then
            args+=("--target-dir" "${_TARGET_DIR}")
          fi
  
          if [ "${_PARAMS}" != "" ]; then
            args+=("--params" ${_PARAMS})
          fi
  
          if [ "${_DRY_RUN}" != "" ]; then
            if [ "${_DRY_RUN}" == "true" ]; then
              args+=("--dry-run")
            else
              args+=("--no-dry-run")
            fi
          fi
  
          if [ "${_COLOR}" != "" ]; then
            if [ "${_COLOR}" == "true" ]; then
              args+=("--color")
            else
              args+=("--no-color")
            fi
          fi
        fi

        if [ "${_COMMAND}" == "github" ]; then
          if [ "${_GIT_USER_NAME}" != "" ]; then
            args+=("--git-user-name" "${_GIT_USER_NAME}")
          fi
        
          if [ "${_GIT_EMAIL}" != "" ]; then
            args+=("--git-email" "${_GIT_EMAIL}")
          fi
        
          if [ "${_MESSAGE}" != "" ]; then
            args+=("--message" "${_MESSAGE}")
          fi

          if [ "${_GITHUB_REPOSITORY}" != "" ]; then
            args+=("--github-repository" "${_GITHUB_REPOSITORY}")
          fi
        
          if [ "${_GITHUB_API_URL}" != "" ]; then
            args+=("--github-api-url" "${_GITHUB_API_URL}")
          fi
        
          if [ "${_PR_TITLE}" != "" ]; then
            args+=("--pr-title" "${_PR_TITLE}")
          fi
        
          if [ "${_PR_BODY}" != "" ]; then
            args+=("--pr-body" "${_PR_BODY}")
          fi
        
          if [ "${_PR_SOURCE_BRANCH}" != "" ]; then
            args+=("--pr-source-branch" "${_PR_SOURCE_BRANCH}")
          fi
        
          if [ "${_PR_TARGET_BRANCH}" != "" ]; then
            args+=("--pr-target-branch" "${_PR_TARGET_BRANCH}")
          fi
        
          if [ "${_PR_ASSIGNEES}" != "" ]; then
            args+=("--pr-assignees" ${_PR_ASSIGNEES})
          fi
        
          if [ "${_PR_REVIEWERS}" != "" ]; then
            args+=("--pr-reviewers" ${_PR_REVIEWERS})
          fi
        
          if [ "${_PR_LABELS}" != "" ]; then
            args+=("--pr-labels" ${_PR_LABELS})
          fi
        
          if [ "${_PR_DRAFT}" != "" ]; then
            if [ "${_PR_DRAFT}" == "true" ]; then
              args+=("--pr-draft")
            else
              args+=("--no-pr-draft")
            fi
          fi
        fi

        set -x
        sashimi_tanpopo ${_COMMAND} "${args[@]}" ${_ARGUMENTS}
        set +x
      shell: bash
      env:
        _COMMAND:           "${{ inputs.command }}"
        _RECIPE_FILES:      "${{ inputs.recipe-files }}"
        _TARGET_DIR:        "${{ inputs.target-dir }}"
        _PARAMS:            "${{ inputs.params }}"
        _DRY_RUN:           "${{ inputs.dry-run }}"
        _COLOR:             "${{ inputs.color }}"
        _GIT_USER_NAME:     "${{ inputs.git-user-name }}"
        _GIT_EMAIL:         "${{ inputs.git-email }}"
        _MESSAGE:           "${{ inputs.message }}"
        _GITHUB_REPOSITORY: "${{ inputs.github-repository }}"
        _GITHUB_API_URL:    "${{ inputs.github-api-url }}"
        _PR_TITLE:          "${{ inputs.pr-title }}"
        _PR_BODY:           "${{ inputs.pr-body }}"
        _PR_SOURCE_BRANCH:  "${{ inputs.pr-source-branch }}"
        _PR_TARGET_BRANCH:  "${{ inputs.pr-target-branch }}"
        _PR_ASSIGNEES:      "${{ inputs.pr-assignees }}"
        _PR_REVIEWERS:      "${{ inputs.pr-reviewers }}"
        _PR_LABELS:         "${{ inputs.pr-labels }}"
        _PR_DRAFT:          "${{ inputs.pr-draft }}"
        _ARGUMENTS:         "${{ inputs.arguments }}"
